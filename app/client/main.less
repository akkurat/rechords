@import './responsive.import.less';
@import './variables.import.less';
// Resets
ul, ol {
  padding-left: 0;
  list-style-type: none;
}

a {
  text-decoration: none;
  color: inherit;
  font-weight: inherit;
}

button, input, select, textarea {
  font: inherit;
  border-style: none;
  color: inherit;
  background-color: inherit;
  text-align: inherit;
  margin: 0;
  padding: 0;
}

button {
  cursor: pointer;
}

textarea {
  display: block;
  width: 100%;
}

// Global Color Definitions
@accent: rgb(221, 68, 7);
//@accent: rgb(0, 141, 235);

@secondary: hsv(hsvhue(@accent), 0.15, 0.6);

@light: hsv(hsvhue(@accent), 0.05, 0.9);
@dull: hsv(hsvhue(@accent), 0.3, 0.7);
@warm: hsv(hsvhue(@accent), 0.2, 0.6);


// Screen sizes
@width-xl: 1500px;
@width-l : 1200px;
@width-m : 900px;
@width-s : 700px;

.phone(@rules) {
  @media only screen and (max-width: 700px) {
      @rules();
  }
}

.phone-tablet(@rules) {
  @media only screen and (max-width: 1200px) {
      @rules();
  }
}


// Color Schemes

.list-colors {
  color: hsv(hsvhue(@accent), 0.2, 0.4);
  background-color: @light;
  scrollbar-color: fade(white, 50%) transparent;
}

.chordsheet-colors {
  h1 {
    color: @accent;
  }

  color: black;  // for aside only, is overridden in #chordsheet
  background-color: white;
  scrollbar-color: fade(black, 15%) transparent;
}

.source-colors {
  h1 {
    color: white;
  }
  color: fade(white, 70%);
  background-color: hsv(hsvhue(@accent), 0.7, 0.8);
  scrollbar-color: fade(black, 15%) transparent;

  textarea {
    color: black;
  }
}

.revision-colors {  // ie. a particular revision
  color: hsv(hsvhue(@accent), 0.4, 0.8);
  background-color: hsv(hsvhue(@accent), 0.7, 0.4);
}

.revisions-colors {  // ie. the list of revisions
  color: hsv(hsvhue(@accent), 0.3, 0.7);
  background-color: hsv(hsvhue(@accent), 0.5, 0.2);
}


// Layout
html {
  height: 100%;
}

body {
  margin: 0;
  padding: 0;
  height: 100%;

  .select(none);
}

#body {
  display: flex;
  width: 100%;
  height: 100%;

  font-family: 'Roboto', Helvetica, Arial, sans-serif;
  font-size: 18px;
  background-color: grey;
}

// dot. wohin?
#dirty {
  display: block;
  position: absolute;
  font-size: 1em;
  width: 1em;
  height: 1em;
  border-radius: 1em;
  background-color: @accent;
  left: 5.9rem;
  top: 3.7rem;
}


// Special content
#logo * {
  font-size: 15em;
  margin: 0;
  line-height: 0.8em;
}


.tags {
  li {
    display: inline-block;
    font-size: 0.75em;
    line-height: 1.7em;
    font-weight: 600;
    text-transform: uppercase;
    background-color: @warm;
    color: white;
    border-radius: 0.4em;
    padding: 0 0.5em;
    margin-right: 0.5em;

    &::before{
      content: none;
    }

    b {
      display: inline-block;
      font-weight: inherit;
      padding: 0 0.5em;
      margin: 0 -0.5em;
      margin-left: 0.3em;
      background-color: @accent;
      border-top-right-radius: inherit;
      border-bottom-right-radius: inherit;
    }
  }
}


#chordsheet {
  .chordsheet-colors;

  padding-top: 2em;
  padding-bottom: 10em;
  padding-left: 6em;

  color: @dull;

  h2, h3, h4 {
    color: black;
  }

  h1, h2 {
    margin-bottom: 1rem;
    font-size: 2.4em;
    display: inline-block;
  }

  h1 {
    margin-right: 0.5em;
    margin-left: -0.1em;
  }

  h3 {
    font-size: 1em;
    margin: 0;

    height: 3em;
    line-height: 2em;
    margin-bottom: -4em;

    text-align: right;
    width: 5em;
    margin-left: -6em;
  }

  // Verse container
  p {
    margin: 1.4em 0;
  }

  h4 {
    margin-top: 2em;
    margin-bottom: -0.5em;
  }

  a {
    color: @accent;

    &:hover{
      text-decoration: underline;
    }
  }

  .ref {
    color: black;
    font-weight: bold;
    padding-left: 8px;
    margin-left: -12px;
    border-left: 4px solid @accent;
    margin-top: 2em;
    margin-bottom: 2em;
  }

  code {
    display: inline-block;
    font-family: 'Input Mono', Courier New, Courier, monospace;
    font-size: 0.8em;
    font-weight: 300;
    color: black;
    padding: 0 0.5em;
    border-radius: 0.4em;
    .source-colors;
  }

  &.interactive i{
    cursor: pointer;

    &:not(.hasChord):hover {
      border-top: 2px solid @accent;
      margin-top: -2px;
    }
  }

  .line {
    display: flex;
    flex-direction: row;
    align-items: flex-end;  
    min-height: 1em;
  }

  .line i {
    font-style: normal;
    font-weight: 400;
    color: black;

    flex-direction:column;
    display:flex;
    white-space:pre-wrap;


    /* currently not in use: Both Viewer and Preview have preprocessors.
    &::before {
      content: attr(data-chord);
      .before();
    }
    */

    .before {  // aka. Chords.

      color: @accent;
      font-weight: 600;
      font-style: normal;

      .select(none);
      .noFocusBorder;

      margin-top: 0;
      margin-right: 0.5em;
      margin-bottom: -0.3em;


      sup {
        vertical-align: 0.4em;
        font-size: 0.7em;
        letter-spacing: 0.02em;
        padding-left: 0.1em;
        font-weight: 700;
      }

      &:focus {
        background-color: hsv(hsvhue(@accent), 0.1, 0.95);
        min-width: 1.5em;

        &:empty:before {
          content: "\feff"; // Patches height rendering of empty contenteditables
        }
      }

      &.optional {
        color: hsv(hsvhue(@accent), 0.3, 0.7);
        &:before { 
          content: '('; 
        }
        &:after { 
          content: ')'; 
        }
        &:after, &:before{
          font-weight: 200;
          vertical-align: 0.05em;
        }
      }
 
    } // before aka. chords
  } // i

  &.interactive .line i .before {
    // Re-allow chord text selection when editing.
    .select(text);
  }

  li {
    line-height: 1.6em;
    list-style-type: none;

    &::before {
      content: 'â€“';
      display: inline-block;
      position: relative;
      width: 0;
      left: -1.2em;

    }
  }

} // .chordsheet


aside.drawer {
  @open: 220px;
  @closed: 30px;

  flex-grow: 0;
  flex-shrink: 0;
  box-sizing: border-box;
  width: @open;

  .scroll;

  padding-top: 1em;
  padding-right: 0;
  padding-bottom: 2em;
  padding-left: 0.5em;

  &.closed {
    overflow: hidden;
    width: @closed;
    padding-left: @closed;
    cursor: pointer;
    transition: all 0.3s;
    z-index: 100;
    box-sizing: border-box;

    // Mitigates the rendering bug of the contained .label
    position: relative;
    
    &:hover {
      width: @open;
      padding-left: 0.5em;
    }
  }

  // Content-width blocker:
  & > div {
    width: @open - @closed; //ie. width - padding
  }

  // Drawer Contents:

  h1, h2, h3 {
    font-size: 2em;
    font-weight: 600;
  }

  & > h1 {
    margin-top: 0;
  }

  h2 {
    font-size: 1em;
    margin-bottom: 0;
    color: mix(@accent, @warm, 80%);

    &.huge {
      margin-top: 0;
      font-size: 2em;
    }
  }

  // Make list items fill the entire width
  li {

    // Stick to one row per li
    white-space: nowrap;
    overflow: hidden;

    margin-left: -0.5em;
    padding-left: 0.5em;

    a {
      display: flex;

      .noFocusBorder;

      padding-top: 0.1em;
      padding-bottom: 0.2em;
      padding-left: 0.5em;
      padding-right: 1.0em;
      margin-left: -0.5em;
      margin-right: -0.5em;

      span {
        display: inline-block;
        box-sizing: border-box;
        min-width: 0;
        text-overflow: ellipsis;
        overflow: hidden;
      }

      .title {
      }

      .author {
        display: none;
        flex: 1 0 0;
        color: hsv(hsvhue(@accent), 0.8, 0.8);
        background-color: @light;
        text-align: right;
        direction: rtl;
        overflow: hidden;
      }

      &:hover {
        .title {
          flex: 1 0 0;
        }

        .author {
          display: inline-block;
          flex: 0 0 auto;
          color: @accent;
        }
      }

      &.selected {
        color: white;
        background-color: @warm;

        .author {
          color: white;
          background-color: @warm;
        }
      }

    }
  }

  &#list {

    .maxwidth(@width-m, {
      position: absolute;
      width: 100%;
      min-height: 100%;
      &.closed {
        display: none;
      }

    });

    .list-colors;

    > div {
      padding-top: 1em;
      width: auto;
    }


    .filter {
      position: absolute;
      left: 0;
      .maxwidth(@width-m, {
        top: 50px;
      });
      .minwidth(@width-m, {
        top: 0;
      });

      display: flex;
      width: @open;

      color: white;
      background-color: @light;

      .reset {
        flex: 0 0 1.5em;
        font-size: 1.4em;
        margin-left: -1.5em;
        cursor: pointer;
        margin-top: 1rem;

        display: none;

        &.filled {
          display: block;
        }
      }

      input {
        margin-top: 1rem;
        padding-left: 0.5em;
        marginleft: -0.5em;
        height: 2em;

        display: block;
        flex: 1 1 auto;

        .noFocusBorder;

        transition: color, background-color 0.5s;

        background-color: @warm;
        &::placeholder {
          color: transparent;
        }

        &[value=""] {
          background-color: @light;
          &::placeholder {
            color: hsv(hsvhue(@accent), 0.2, 0.4);
          }
        }

        &:focus {
          background-color: @warm;
          &::placeholder {
            color: fade(white, 50%);
          }
        }
      }
    }

    div.filterMenu {
      left: 0;
      width: 100%;
      .minwidth(@width-m, {
        width: calc(~"100% - " @open);
        left: @open;
      });
      position: absolute;
      z-index: 1;
      overflow: scroll;

      -webkit-backdrop-filter: blur(10px);
      background-color: fade(@light, 50%);

      @media all and (-webkit-min-device-pixel-ratio:0) and (min-resolution: .001dpcm) {
        // non-webkit-browsers
        background-color: mix(@light, white);
      }

      display: flex;
      flex-direction: row;
      .maxwidth(@width-m, {
        top: 100px;
      });

      flex-wrap: wrap;
      // justify-content: space-around;
      align-content: flex-start;

      padding-top: 0.5em;
      padding-left: 2em;
      padding-bottom: 1.5em;

      div.taggroup {
        margin-right: 20px;
        // flex-basis: 200px;
      }

      h1, h2{
        display: none;
      }

      h4 {
        color: black;
        display: block;
        // width: 0;
        transform-origin: top right;
        font-weight: 600;
        transform: rotate(-14deg);

      }

      ul {
        margin-top: 3.5em;
        margin-left: 0.5em;
        flex: 0 0 7em;
        display: flex;
        flex-direction: column;
      }

      li {
        color: white;

        margin-bottom: 0.5em;
        transform-origin: left;
        transform: rotate(-14deg);
        cursor: pointer;

        &:hover {
          background-color: black;
        }

        b {
          width: 1em;
        }
      }

      &.hidden{
        opacity: 0;
        visibility: hidden;
      }

      opacity: 1;
      transition: opacity, 0.5s;
    }
  }
} // drawer

aside.drawer#revs {

  ol {
    list-style-type: lower-greek;

    li {
      font-size: 0.8em;
      padding: 0.3em;

      &:hover {
        background-color: hsva(0,0,0,0.3)
      }

      &.active {
        background-color: hsva(0,0,0,0.5)
      }

    }
  }

}

#mobileheader {
  display: none;
}

.phone({
  #mobileheader {
    display: block;
  }

  aside.drawer {
    &.open {
      width: 100%;
    }
    &.closed {
      display: none;
    }
  }

});

.content {
  box-sizing: border-box;
  min-height: 100vh;

  .scroll;

  width: 100%;
  padding: 1em 2em 1em 2em;

  h1:first-child,
  h2:first-child {
    margin-top: 0;

    &+h2{
      margin-top: 0;
    }
  }
}

textarea {
  font-family: 'Input Mono', Courier New, Courier, monospace;
  font-weight: 300;
  font-size: 0.9em;
  width: inherit;
  cursor: text;

  .noFocusBorder;
}

.noFocusBorder {
  &:focus {
    outline: none;
  }

  &::selection {
    color: hsv(hsvhue(@accent), 0.4, 0.8);
    background-color: hsva(hsvhue(@accent), 0.3, 0.3, 1.0);
  }

  &::-moz-selection {
    color: hsv(hsvhue(@accent), 0.8, 0.3);
    background-color: hsv(hsvhue(@accent), 0.5, 0.9);
  }
}

hr {
  border-style: solid;
  margin-bottom: 1em;
}

.label {
  font-weight: bold;
  font-size: 1.2em;
  text-transform: uppercase;
  background-color: inherit;

  display: block;
  padding: 0.2em;
  position: fixed;
  bottom: 1em;
}

// CSS-wise transparent container to satisfy react.
// TODO: remove all of them. 
.container {
  display: contents;
}

// Editor.jsx
// TODO: attach at jsx level?
#editor {
  display: flex;
  width: 100%;
}

#transposer {

  .maxwidth(@width-m, {
    display: none;
  });

  height: 400px;
  float: right;

  .rc-slider {
    width: 0px;
  }

  .rc-slider-mark {
    top: 2px;
    left: -60px;
  }

  .rc-slider-mark-text {
    width: 50px;
    text-align: right;
  }

  .rc-slider-track {
    background-color: @accent;
  }

  .rc-slider-handle,
  .rc-slider-dot-active {
    border-color: @accent;
  }
}

@media print {
  aside, #transposer, .tags { display: none; }

  #body {
    font-size: 12pt;
    width: 210mm;
  }

  #chordsheet {
    columns: 2;
  }

  #head, h1, h2 {
    column-span: all;
  }
}

.select(@mode: none;) {
  -webkit-touch-callout: @mode; /* iOS Safari */
    -webkit-user-select: @mode; /* Safari */
     -khtml-user-select: @mode; /* Konqueror HTML */
       -moz-user-select: @mode; /* Firefox */
        -ms-user-select: @mode; /* Internet Explorer/Edge */
            user-select: @mode; /* Non-prefixed version, currently
                                  supported by Chrome and Opera */
}

.scroll {
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  scrollbar-width: thin;
}

#viewer-maincontainer {
  width: 100%;
}

.flex-vertical {
  display: flex;
  flex-direction: column;
}