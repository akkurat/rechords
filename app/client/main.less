// Resets
ul {
  padding-left: 0;
}

a {
  text-decoration: none;
}

button, input, select, textarea {
  font: inherit;
  border-style: none;
  color: inherit;
  background-color: inherit;
  text-align: inherit;
  margin: 0;
  padding: 0;
}

button {
  cursor: pointer;
}

textarea {
  display: block;
  width: 100%;
}

// Globals
@accent: rgb(221, 68, 7);
//@accent: rgb(0, 141, 235);

// Layout
body {
  margin: 0;
  padding: 0;

  .select(none);
}

#body {
  display: flex;
  width: 100%;

  font-family: 'Roboto';
  font-size: 18px;
  background-color: grey;
}

.chordtable {
  // padding: 20px;
  text-align: center;
  td {
    padding-top: 5px;
    padding-bottom: 5px;
    padding-left: 15px;
    padding-right: 15px;
  }
}

#route {
  display: flex;
  width: 100%;
}


// Content role mixins
.chordsheet {
  h1 {
    color: @accent;
  }

  color: black;  // for aside only, is overridden in #chordsheet
  background-color: white;
}

.source {
  background-color: hsv(hsvhue(@accent), 0.7, 0.8);
}

.revision {
  color: hsv(hsvhue(@accent), 0.4, 0.8);
  background-color: hsv(hsvhue(@accent), 0.7, 0.4);
}

.revisions {
  color: hsv(hsvhue(@accent), 0.3, 0.7);
  background-color: hsv(hsvhue(@accent), 0.5, 0.2);
}


// Special content
#logo * {
  font-size: 15em;
  margin: 0;
  line-height: 0.8em;
}


.tags {
  li {
    display: inline-block;
    font-size: 0.75em;
    line-height: 1.7em;
    font-weight: 600;
    text-transform: uppercase;
    background-color: hsv(hsvhue(@accent), 0.2, 0.6);
    color: white;
    border-radius: 0.4em;
    padding: 0 0.5em;
    margin-right: 0.5em;

    &::before{
      content: none;
    }

    b {
      display: inline-block;
      font-weight: inherit;
      padding: 0 0.5em;
      margin: 0 -0.5em;
      margin-left: 0.3em;
      background-color: @accent;
      border-top-right-radius: inherit;
      border-bottom-right-radius: inherit;
    }
  }
}


#chordsheet {
  .chordsheet;

  padding-top: 2em;
  padding-bottom: 4em;
  padding-left: 6em;

  color: hsv(hsvhue(@accent), 0.3, 0.7);

  h2, h3, h4 {
    color: black;
  }

  h1, h2 {
    margin-bottom: 1rem;
    font-size: 2.4em;
    display: inline-block;
  }

  h1 {
    margin-right: 0.5em;
    margin-left: -0.1em;
  }

  h3 {
    margin: 0;
    margin-top: -1em;
    font-size: 1em;
    position: relative;
    bottom: -2.37em;
    left: -6em;
    width: 5em;
    text-align: right;  
  }

  h4 {
    margin-top: 2em;
    margin-bottom: -0.5em;
  }

  a {
    color: @accent;

    &:hover{
      text-decoration: underline;
    }
  }

  .ref {
    color: black;
    font-weight: bold;
    margin-top: 2em;
    padding-left: 8px;
    margin-left: -12px;
    border-left: 4px solid @accent;
  }

  code {
    display: inline-blocK;
    font-family: 'Input Mono', Courier New, Courier, monospace;
    font-size: 0.8em;
    font-weight: 300;
    color: black;
    padding: 0 0.5em;
    border-radius: 0.4em;
    .source;
  }

  &.interactive i{
    cursor: pointer;

    &:not(.hasChord):hover {
      border-top: 2px solid @accent;
      margin-top: -2px;
    }
  }

  .line {
    display: flex;
    flex-direction: row;
    align-items: flex-end;  
    min-height: 1em;
  }

  .line i {
    font-style: normal;
    font-weight: 400;
    color: black;

    flex-direction:column;
    display:flex;
    white-space:pre-wrap;


    /* currently not in use: Both Viewer and Preview have preprocessors.
    &::before {
      content: attr(data-chord);
      .before();
    }
    */

    .before {  // aka. Chords.

      color: @accent;
      font-weight: 600;
      font-style: normal;

      .select(none);
      .noFocusBorder;

      margin-top: 0;
      margin-right: 0.5em;
      margin-bottom: -0.3em;


      sup {
        vertical-align: 0.4em;
        font-size: 0.7em;
        letter-spacing: 0.02em;
        padding-left: 0.1em;
      }

      &:focus {
        background-color: hsv(hsvhue(@accent), 0.1, 0.95);
        min-width: 1.5em;

        &:empty:before {
          content: "\feff"; // Patches height rendering of empty contenteditables
        }
      }

      &.optional {
        color: hsv(hsvhue(@accent), 0.4, 0.9);
        &:before { 
          content: '('; 
        }
        &:after { 
          content: ')'; 
        }
        &:after, &:before{
          font-weight: 200;
          vertical-align: 0.05em;
        }
      }
 
    } // before aka. chords
  } // i

  &.interactive .line i .before {
    // Re-allow chord text selection when editing.
    .select(text);
  }

  li {
    line-height: 1.6em;
    list-style-type: none;

    &::before {
      content: 'â€“';
      display: inline-block;
      position: relative;
      width: 0;
      left: -1.2em;

    }
  }

} // .chordsheet



aside {
  @width: 200px;
  flex-grow: 0;
  flex-shrink: 0;
  box-sizing: border-box;
  width: @width;

  padding-top: 1em;
  padding-left: 0.5em;
  padding-right: 0;
  padding-bottom: 2em;

  h1, h2, h3 {
    font-size: 2em;
    font-weight: 600;
  }

  & > h1 {
    margin-top: 0;
  }

  p { 
    opacity: 0.7;
  }


  &.collapsed {
    @width: 30px;
    overflow: hidden;
    width: @width;
    cursor: pointer;
    transition: width 0.3s;
    z-index: 100;
    box-sizing: border-box;
    padding-left: @width;

    // Mitigates the rendering bug of the contained .label
    position: relative;
    
    &:hover {
      width: 300px;
    }

    // Avoid linebreaks during slide-in/--out
    * {
      width: 245px;
    }
  }

  &#list {
    @bg: hsv(hsvhue(@accent), 0.2, 0.5);
    background-color: @bg;

    .filter {
      display: flex;

      .reset {
        flex: 0 0 1.5em;
        font-size: 1.4em;
        margin-left: -1.5em;
        cursor: pointer;
        color: @accent;

        display: none;
        &.filled {
          display: block;
        }
      }

      input {
        color: @accent;
        margin-left: -0.5em;
        padding-left: 0.5em;
        height: 2em;
        width: 100;

        display: block;
        flex: 1 1 auto;

        .noFocusBorder;

        transition: color, background-color 0.5s;

        background-color: mix(white, @bg, 80%);
        &::placeholder {
          color: transparent;
        }

        &[value=""] {
          background-color: transparent;
          &::placeholder {
            color: fade(white, 50%);
          }
        }

        &:focus {
          background-color: mix(white, @bg, 80%);
          &::placeholder {
            color: @accent;
          }
        }
      }
    }

    .filterMenu {
      position: absolute;
      z-index: 1;
      left: @width;
      top: 0;

      @bgMenu: mix(white, @bg, 70%);
      background-color: @bgMenu;

      display: flex;
      flex-direction: row;

      padding-top: 0.5em;
      padding-left: 2em;
      padding-bottom: 3em;

      h1, h2{
        display: none;
      }

      h4 {
        color: black;
        display: block;
        width: 0;
        transform-origin: top right;
        font-weight: 600;
        transform: rotate(-14deg);
      }

      ul {
        margin-top: 3em;
        flex: 0 0 7em;
      }

      li {
        margin-bottom: 0.5em;
        transform-origin: center;
        transform: rotate(-14deg);
        cursor: pointer;

        &:hover {
          background-color: black;
        }

        b {
          width: 1em;
        }
      }

      &.hidden{
        opacity: 0;
      }

      opacity: 1;
      transition: opacity, 0.5s;
    }

  }

  &#revs {

    ol {
      list-style-type: lower-greek;

      li {
        font-size: 0.8em;
        padding: 0.3em;

        &:hover {
          background-color: hsva(0,0,0,0.3)
        }

        &.active {
          background-color: hsva(0,0,0,0.5)
        }

      }
    }

  }

  color: white;

  h2 {
    font-size: 1em;
    margin-bottom: 0;
    text-transform: uppercase;
  }

  a {
    color: inherit;
    font-weight: inherit;
  }

  ul {
    list-style-type: none;
  }

  li > a, li button {
    color: black;
    display: block;
    padding: 0.1em;
    margin-left: -0.5em;
    padding-left: 0.5em;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;

    &.selected {
      background-color: hsv(hsvhue(@accent), 0.8, 0.8);
    }
    
    .noFocusBorder;
  }

  ul {
    margin: 0;
  }
}

.content {
  box-sizing: border-box;
  overflow: hidden;
  min-height: 100vh;

  width: 100%;
  padding: 1em 2em 1em 2em;

  h1:first-child,
  h2:first-child {
    margin-top: 0;

    &+h2{
      margin-top: 0;
    }
  }
}

textarea {
  font-family: 'Input Mono', Courier New, Courier, monospace;
  font-weight: 300;
  font-size: 0.9em;
  width: inherit;
  overflow: hidden;
  white-space: pre;
  cursor: text;

  .noFocusBorder;
}

.noFocusBorder {
  &:focus {
    outline: none;
  }

  &::selection {
    color: hsv(hsvhue(@accent), 0.4, 0.8);
    background-color: hsva(hsvhue(@accent), 0.3, 0.3, 1.0);
  }

  &::-moz-selection {
    color: hsv(hsvhue(@accent), 0.8, 0.3);
    background-color: hsv(hsvhue(@accent), 0.5, 0.9);
  }
}

hr {
  border-style: solid;
  margin-bottom: 1em;
}

.label {
  font-weight: bold;
  font-size: 1.2em;
  text-transform: uppercase;
  background-color: inherit;

  display: block;
  padding: 0.2em;
  position: fixed;
  bottom: 1em;
}

// CSS-wise transparent container to satisfy react.
.container {
  display: inherit;
  width: inherit;
  min-height: inherit;
  padding: 0;
  margin: 0;
}

// Editor.jsx
// TODO: attach at jsx level?
#editor {
  display: flex;
  width: 100%;
}

#transposer {
  height: 400px;
  float: right;

  .rc-slider {
    width: 50px;
  }

  .rc-slider-mark {
    top: -18px;
  }

  .rc-slider-track {
    background-color: @accent;
  }

  .rc-slider-handle,
  .rc-slider-dot-active {
    border-color: @accent;
  }
}

@media print {
  aside, #transposer, .tags { display: none; }

  #body {
    font-size: 12pt;
    width: 210mm;
  }

  #chordsheet {
    columns: 2;
  }

  #head, h1, h2 {
    column-span: all;
  }
}

.select(@mode: none;) {
  -webkit-touch-callout: @mode; /* iOS Safari */
    -webkit-user-select: @mode; /* Safari */
     -khtml-user-select: @mode; /* Konqueror HTML */
       -moz-user-select: @mode; /* Firefox */
        -ms-user-select: @mode; /* Internet Explorer/Edge */
            user-select: @mode; /* Non-prefixed version, currently
                                  supported by Chrome and Opera */
}
